//! This library exposes the raw C API as provided in mex.h, matrix.h, mat.h and engine.h.
//! The rust bindings were mostly automatically generated by bindgen and named the same or similar as in the C headers.
//! Some manual changes were made to the bindings to ease usage or simplify the exposed API without sacrificing
//! functionality, such as replacing type definitions for the fixed size integer types with the native fixed size types
//! from Rust.
//!
//! ## IMPORTANT:
//! This library exposes both the older mex API (separate_complex) which stands to be deprecated by Mathworks in
//! the future as well as the newer mex API (interleaved_complex), which is to become the default in Matlab instead.
//! Both versions have significant overlap in their API, but also [important differences]. Most importantly,
//! some types have a different representation (e.g. mxArray of complex numbers) and some functions behave differently
//! even though the API stayed the same (e.g. [mxGetData]).
//! This library exposes both APIs in their own namespace to minimize risk of confusion between versions.   
//! **Do not use functions of one namespace with types of the other one. Since the namespace is part of the type,
//! this should only be possible by deliberate casting anyway. It is recommended to enable only one of both APIs
//! per crate with the corresponding feature.**
//!
//! ##
//! 
//! In Matlab it is impossible to enable both versions of the API at the same time when using the `mex` command,
//! which mitigates the danger of mixing APIs. While this mutually exclusive API could be also be achieved in this crate
//! by using mutually exclusive features, this would lead to some significant drawbacks.
//! The dependency resolver of cargo [unifies all features] of a crate which are enabled by any dependent crate in
//! the dependency tree, effectively compiling the crate with the union of all enabled features.
//! In the case of mutually exclusive features this would lead to the inability for multiple separate
//! intermediate dependencies to use the different APIs, even internally.
//!
//! [important differences]: https://de.mathworks.com/help/matlab/matlab_external/matlab-support-for-interleaved-complex.html
//! [unifies all features]: https://doc.rust-lang.org/cargo/reference/features.html?highlight=additive#feature-unification
//! [mxGetData]: https://de.mathworks.com/help/matlab/apiref/mxgetdata.html

#[cfg(not(target_pointer_width = "64"))]
compile_error!("The bindings are only valid for 64-bit applications. All Matlab versions after 2015b are only available in 64-bit.");

mod raw;
#[cfg(feature = "interleaved-complex")]
pub use raw::interleaved_complex;
#[cfg(feature = "separate-complex")]
pub use raw::separate_complex;
